from flask import Flask, request, make_response
import mysql.connector

app = Flask(__name__)

db_config = {
    'user': 'your_username',
    'password': 'your_password',
    'host': 'your_host',
    'database': 'your_database'
}

def ServerConnection(user = '', password = '', host = '', database = ''):
    connection = None
    try:
        connection = mysql.connector.connect(**config)
        print("MySQL Database connection successful")
    except Error as err:
        print(f"Error: '{err}'")
    return connection



@app.route('/Register', methods=['PUT'])
def Register_User():
    connection = ServerConnection(db_config)
    return

@app.route('/Userlogin', methods=['GET'])
def User_Login():
    connection = ServerConnection(db_config)
    return

@app.route('/add_Course', methods=['POST'])
def create_Course():
    connection = ServerConnection(db_config)
    return

@app.route('/find_Course', methods=['GET'])
def get_Course(cName):
    try:
        connection = ServerConnection(db_config)

        cursor = connection.cursor()
        cursor.execute(f"SELECT * FROM Course WHERE courseName={cName}")
        row = cursor.fetchone()
        course = {}
        if row is not None:
            CourseC, CourseName, StartDt, EndDt = row
            course["Coursec"] = CourseC
            course["CourseName"] = CourseName
            course["StartDt"] = StartDt
            course["EndDt"] = EndDt
            cursor.close()
            return make_response(course, 200)
        else:
            return make_response({'error': "Anerror has occured"}, 400)

    except:
        return make_response({'error': 'An error has occured'}, 400)

@app.route()
def Course_Register():
    connection = ServerConnection(db_config)
    return

@app.route()
def get_CourseMembers():
    connection = ServerConnection(db_config)
    return

@app.route()
def get_CalendarEvents():
    connection = ServerConnection(db_config)
    return

@app.route()
def create_CalendarEvents():
    connection = ServerConnection(db_config)
    return

@app.route()
def manage_Forums():
    connection = ServerConnection(db_config)
    return

@app.route()
def manage_DiscussionThread():
    connection = ServerConnection(db_config)
    return

@app.route()
def manage_CourseContent():
    connection = ServerConnection(db_config)
    return

@app.route()
def manage_Assignments():
    connection = ServerConnection(db_config)
    return

@app.route()
def make_Reports():
    connection = ServerConnection(db_config)
    return
    
if __name__ == '__main__':
    app.run(debug = True,port=3000)
